syntax = "proto3";

/**
* the scene is from lamport-paxos, The single-Decree Synod
* and I change some details.
* see more http://lamport.azurewebsites.net/pubs/lamport-paxos.pdf
*/
package protos;

/**
* id means b(a new ballot number)
* minId means v(the maxVote(b, q, B)), q is the priest
	, B is the set of ballots.
* 
*/

message NextBallot{
	uint32 id = 1; // the ballot id
	uint32 priest = 2; // the priest who send this request
}

message LastVote{
	uint32 id = 1; // the ballot id
	uint32 minId = 2; // the max ballot id less than id of this priest
	uint32 priest = 3; // the priest who send this request
}

message BeginBallot{
	uint32 id = 1; // the ballot id
	string decree = 2; // the decree of this ballot
	uint32 priest = 3; // the priest who send this request
}

message Voted{
	bool vote = 1; // the flag whether vote this ballot
	uint32 id = 2; // the ballot id
	uint32 priest = 3; // the priest who send this request
}

message Success{
	uint32 id = 1; // the ballot id
	string decree = 2; // the decree of this ballot
	uint32 priest = 3; // the preist who begin this ballot
}

message Leger{
	map<uint32, string> values = 1;
}

message Empty{

}

service Paxos{
	rpc DealPreBallot (NextBallot) returns (LastVote) {}
	rpc DealBallot (BeginBallot) returns (Voted) {}
	rpc RecordDecree (Success) returns (Empty) {}
	rpc Synchronize (Leger) returns (Leger) {}
}